# repository.py (PORTAS / interfaces DAO)
from abc import ABC, abstractmethod
from typing import Iterable, Optional, List
from models import Usuario, Sala, Reserva

# ---------- USER ----------
class UserDAO(ABC):
    @abstractmethod
    def add(self, u: Usuario) -> None: ...
    @abstractmethod
    def get_by_login(self, login: str) -> Optional[Usuario]: ...
    @abstractmethod
    def get_by_id(self, uid: int) -> Optional[Usuario]: ...
    @abstractmethod
    def list_all(self) -> Iterable[Usuario]: ...
    @abstractmethod
    def update(self, u: Usuario) -> None: ...
    @abstractmethod
    def delete(self, uid: int) -> None: ...

# ---------- SALA ----------
class SalaDAO(ABC):
    @abstractmethod
    def add(self, s: Sala) -> Sala: ...
    @abstractmethod
    def get_by_id(self, sala_id: int) -> Optional[Sala]: ...
    @abstractmethod
    def list_all(self) -> Iterable[Sala]: ...
    @abstractmethod
    def delete(self, sala_id: int) -> bool: ...

# ---------- RESERVA ----------
class ReservaDAO(ABC):
    @abstractmethod
    def add(self, r: Reserva) -> Reserva: ...
    @abstractmethod
    def get_by_id(self, rid: int) -> Optional[Reserva]: ...
    @abstractmethod
    def list_all(self) -> Iterable[Reserva]: ...
    @abstractmethod
    def list_by_sala_data(self, sala_id: int, data: str) -> List[Reserva]: ...
    @abstractmethod
    def update(self, r: Reserva) -> None: ...
    @abstractmethod
    def delete(self, rid: int) -> None: ...
